<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Cases of the Artificial Neural Networks]]></title>
    <url>%2F2019%2F10%2F08%2F%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;人工神经网络（Artificial Neural Networks,简写ANN）是以一种模仿动物神经网络特征，进行分布式并行神经处理的算法数学模型。由大量的节点（或称神经元）组成。每个节点对应不同的输出函数，称为激活函数（activation function）,节点与节点之间对应不同的加权值，称之为权重。 前向传播 &emsp;&emsp;pass 反向传播&emsp;&emsp;反向传播（Backword Propagation）是“误差反向传播”的简称，是一种与梯度下降算法结合使用的，用来训练人工神经网络的重要算法。该算法通过计算损失函数对神经网络中各个权值的偏导数来最小化损失函数。是神经网络执行梯度下降算法的主要算法。该算法先前向计算出各个节点的状态以及输出值，然后再以反向计算损失函数对各个参数的偏导数。反向传播算法主要由激励传播和权值更新两个过程反复迭代，直到网络对输入的响应达到目标要求为止。本文将按照单一训练集介绍反向传播算法中重要公式的推导，后续扩展到m维训练集。&emsp;&emsp;单一训练集时符号说明如下： 参数矩阵的维度&emsp;&emsp;pass 非线性激活函数的对比分析&emsp;&emsp;pass]]></content>
      <categories>
        <category>Deep Learning</category>
        <category>Neural Network</category>
      </categories>
      <tags>
        <tag>Deep Learning</tag>
        <tag>Algorithm</tag>
      </tags>
  </entry>
</search>
